buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
    }
}

plugins {
    id "java"
    id "jacoco"
    id "project-report"
    id "org.springframework.boot" version "1.5.2.RELEASE"
    id "org.asciidoctor.convert" version "1.5.3"
    id "org.sonarqube" version "2.2.1"
}

repositories {
    jcenter()
    maven { url "http://repo.spring.io/release" }
}

group = 'fonimus'
version = '0.0.1-SNAPSHOT'
description = 'Web Socket example with angular'

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-websocket'

    compile('com.ryantenney.metrics:metrics-spring:3.1.3')

    compile 'com.h2database:h2'

    //compile 'org.springframework.boot:spring-boot-devtools'

    compile 'org.webjars:webjars-locator'
    compile 'org.webjars.bower:angularjs:1.6.2'
    compile 'org.webjars.bower:angular-touch:1.6.2'
    compile 'org.webjars.bower:angular-animate:1.6.2'
    compile 'org.webjars.bower:angular-ui-router:0.4.2'
    compile 'org.webjars.bower:angular-ui-bootstrap-bower:2.5.0'
    compile 'org.webjars.bower:angular-chart.js:1.1.1'
    compile 'org.webjars.bower:chart.js:2.3.0'
    compile 'org.webjars.bower:angular-toastr:2.1.1'
    compile 'org.webjars:sockjs-client:1.0.2'
    compile 'org.webjars:stomp-websocket:2.3.3'
    compile 'org.webjars:bootstrap:3.3.7'

    testCompile("org.springframework.boot:spring-boot-starter-test")
}

jacoco {
    toolVersion = '0.7.9'
}

defaultTasks 'bootRun'

bootRun {
    addResources = true
}

bootRepackage {
    executable = true
}

springBoot {
    executable = true
    buildInfo()
}

test {
    reports.html.enabled = true
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn test
}

asciidoctor {
    backends 'pdf','html5'
    attributes \
            'endpoint-url': 'http://example.org',
            'source-highlighter': 'coderay',
            'imagesdir': './images',
            'toc': 'left',
            'icons': 'font',
            'setanchors': '',
            'idprefix': '',
            'idseparator': '-',
            'docinfo1': ''
}

configurations {
    ftpAntTask
}

dependencies {
    ftpAntTask("org.apache.ant:ant-commons-net:1.8.4") {
        module("commons-net:commons-net:1.4.1") {
            dependencies "oro:oro:2.0.8:jar"
        }
    }
}

task ftp {
    doLast {
        ant {
            taskdef(name: 'ftp',
                    classname: 'org.apache.tools.ant.taskdefs.optional.net.FTP',
                    classpath: configurations.ftpAntTask.asPath)
            ftp(server: "192.168.1.11", userid: "fonimus", password: "", remoteDir: "/web/site") {
                fileset(dir: "build/reports/project/dependencies") {
                    include(name: "*")
                }
                fileset(dir: "build/reports/project/dependencies") {
                    include(name: "**/*")
                }
            }
        }
    }
}

